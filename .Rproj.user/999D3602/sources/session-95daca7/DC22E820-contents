---
title: "TreeMapping"
author: "Richard Barad"
date: "2024-02-10"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message=FALSE)

library(tidyverse)  #Includes ggplot, dplyr used for data wrangling and graphics
library(sf) #Working with spatial data
library(tidycensus) #Get census data
library(tigris) #Get political boundaries for the US
library(RColorBrewer) #Color ramp package
library(gridExtra) #Make grids of ggplot visuals
library(kableExtra) #Make tables
library(ggpubr) 
library(RSocrata) #Import CDC data from Socrata

```

# Tree Canopy Data, Concil Districts, and Tracts and heat

```{r get_data, results='hide'}
#Downloaded shapefile and reprojected using ArcGIS since dataset was too large to read via API and reproject using R
philly_tree_canopy <- st_read('TreeCanopyChange_2008_2018-shp/TreeCanopy_2018_2272.shp')

#Read data from open data Philly and tracts using Tigris
city_concil_districts <- st_read('https://opendata.arcgis.com/api/v3/datasets/1ba5a5d68f4a4c75806e78b1d9245924_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1') %>% st_transform('EPSG:2272')
 
Philly_Tracts <- tigris::tracts(state='PA',county='Philadelphia') %>% st_transform('EPSG:2272')

heat_vulnerability <- st_read('https://opendata.arcgis.com/api/v3/datasets/6afc1177d0cc49dc8c731532b95ccd1f_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1') %>% 
  st_transform('EPSG:2272') %>% 
  select('geoid10','hei_score')
```


# Tree Cover by Census Tract

```{r tree_data, echo=FALSE}

# Intersect tracts with tree canopy and calculate area of each tree canopy polygon and aggregate tree area by tract

area_sum <- st_intersection(Philly_Tracts,philly_tree_canopy) %>%
  select(GEOID,geometry) %>%
  mutate(area = st_area(.)) %>%
  st_drop_geometry() %>%
  group_by(GEOID) %>% summarise(tree_area = sum(as.numeric(area)))

# Calculate tract area, join tree area data, and calculate percent tree cover

Philly_Tracts <- Philly_Tracts %>%
  select(GEOID,geometry) %>%
  mutate(area = as.numeric(st_area(.))) %>%
  left_join(.,area_sum) %>%
  mutate(pct_tree = tree_area / area * 100)

```

# Tree Cover Maps

```{r viz_tree_cover, fig.width=12, fig.height=5, echo=FALSE}


t1 <- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(pct_tree, breaks = c(0, 5,10, 20, 30, 40, 50, 100))),color='white',linewidth =0.2) +
  scale_fill_manual(values = brewer.pal(n = 7, name = "YlGn"),name='Percent Tree Cover (2018)',labels=c('0 - 5%','5 - 10%','10 - 20%','20 - 30%','30 - 40%','40 - 50%','>50%')) +
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Percent Tree Cover (2018)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12))

ggsave('outputs/tree_cover1.png',dpi=300,width=6,height=5)

t2 <- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(pct_tree, breaks = c(0,mean(pct_tree),100))),color='white',linewidth =0.2) +
  scale_fill_manual(values = brewer.pal(n = 3, name = "YlGn"),name='Percent Tree Cover (2018)',labels=c('Below Average','Above Average')) +
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Tree Cover Compared to Average')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12))

ggsave('outputs/tree_cover2.png',dpi=300)

t <- grid.arrange(ncol=2,t1,t2)

```

## Street Trees - Data Processing

```{r viz_test, echo=FALSE, results='hide'}

tree_summary <- function(url,tracts,field_name){
  tree_inv <- st_read(url) %>% 
  st_transform('EPSG:2272') %>%
  st_join(.,tracts %>% select('GEOID','geometry'),join = st_intersects) %>%
  st_drop_geometry() %>%
  group_by(GEOID) %>% summarise(!!field_name := n())
  return(tree_inv)
}

url_2023 <- 'https://opendata.arcgis.com/api/v3/datasets/bde5dd63e2464c3c94797f83c3076374_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1'
url_2021 <- 'https://opendata.arcgis.com/api/v3/datasets/30ef36e9e880468fa74e2d5b18da4cfb_0/downloads/data?format=geojson&spatialRefId=4326'

tree_count_2023 <- tree_summary(url_2023,Philly_Tracts,'street_tree_2023')
tree_count_2021 <- tree_summary(url_2021,Philly_Tracts,'street_tree_2021')

Philly_Tracts <- tree_count_2021 %>%
  full_join(.,tree_count_2023,by='GEOID') %>%
  left_join(Philly_Tracts,.,by='GEOID') %>%
  mutate(street_tree_2021 = ifelse(is.na(street_tree_2021),0,street_tree_2021),
         street_tree_2023 = ifelse(is.na(street_tree_2023),0,street_tree_2023),
         tree_change = street_tree_2023 - street_tree_2021,
         pct_change = tree_change / street_tree_2021 * 100,
         pct_change = ifelse(is.nan(pct_change),0,pct_change))
```

# Street Tree Maps

```{r,fig.width=12, fig.height=12}

t3<- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(street_tree_2023, breaks = c(-1,200,400,600,800,1000,1200,5000))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 7, name = "YlGn"),name='# of Street Trees (2023)',labels=c('<200','201-400','401-600','601-800','801-1,000','1,001-1,200','>1,200'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Number of Street Trees (2023)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

ggsave('outputs/tree_count2023.png',dpi=300,width=5,height=5)

t4 <- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(tree_change, breaks = c(-1000,-100,-50,-10,10,50,100,1000))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 7, name = "RdBu"),name='Change in Street Trees',labels=c('<-100','-100 to -50','-50 to -10','-10 to 10','10 to 50','50 to 100','>100'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Change in Street Trees (2021 to 2023)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

ggsave('outputs/tree_change2023_2021.png',dpi=300,width=5,height=5)

t5 <- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(pct_change, breaks = c(-100,-25,-10,-5,-1,1,5,10,25,100))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 9, name = "RdBu"),name='Percent Change in Street Trees',labels=c('>25% Decrease','25 to 10% Decrease','10 to 5% Decrease','5 to 1% Decrease','Minimal Change','1 to 5% Increase','5 to 10% Increase','10 to 25% Increase','>25% Increase'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Percent Change in Street Trees (2021 to 2023)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

ggsave('outputs/tree_pctchange1.png',dpi=300,width=5,height=5)

t6 <- ggplot() +
  geom_sf(data = Philly_Tracts, aes(fill = cut(pct_change, breaks = c(-100,0,2.5,5,10,20,100))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 6, name = "YlGn"),name='Percent Change in Street Trees',labels=c('Decrease/No Change','<2.5% increase','2.5 - 5% Increase','5 - 10%  Increase','10 - 20% Increase','>20% Increase'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Percent Change in Street Trees (2021 to 2023)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

ggsave('outputs/tree_pctchange2.png',dpi=300,width=5,height=5)

t <- grid.arrange(ncol=2,t3,t4,t5,t6)
```

# Process ACS data from 2022

```{r census, results='hide'}

vars = c('B25119_001', #Average Income
              'B02001_001', #Total Population
              'B02001_002') #White Only

acs <- get_acs('tract',
                        variables = vars,
                        year = 2022,
                        state = 'PA',
                        county='Philadelphia',
                        geometry = FALSE,
                        output = 'wide') %>%
  select('GEOID','B25119_001E','B02001_001E','B02001_002E') %>%
  rename('Average_Income' = 'B25119_001E',
         'Total_pop' = 'B02001_001E',
         'White_pop' = 'B02001_002E') %>%
  mutate(pct_white = round((White_pop / Total_pop * 100),2)) %>%
  select('GEOID','Average_Income','pct_white')

Philly_Tracts <- Philly_Tracts %>% left_join(.,acs,by='GEOID')
```

# Spatial join heat vulnerability data to Tracts

```{r}
heat_centroids <- heat_vulnerability  %>%
  st_centroid()

Philly_Tracts2 <- Philly_Tracts %>%
  st_join(.,heat_centroids,left=TRUE) %>%
  distinct(GEOID, .keep_all = TRUE) %>%
  select(-geoid10)
```


# Scatter Plot - correlations

```{r cor1, fig.width=14,fig.height=5,message=FALSE}


scatter_plot <- function(y,ylab,t) {
  ggplot(data=Philly_Tracts2,aes(pct_tree, {{y}})) +
  geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "red") +
  ylab(ylab)+
  xlab('Percent Tree Cover (2018)')+
  labs(title = t)+
  theme(strip.background = element_blank(),
           strip.placement = "outside")+
  stat_cor(method = "pearson",color='red')+
  theme(plot.title = element_text(size=9))
}


s1 <- scatter_plot(Average_Income,'Median Income','Median Income as a function of Tree Canopy (%)')

ggsave('outputs/income_scatter.png')

s2 <- scatter_plot(hei_score,'Difference from Average City Temp. (°F)','Difference from Av. Temperature as a function of Tree Canopy (%)')

ggsave('outputs/heat_scatter.png')

s3 <- scatter_plot(pct_white,'Percent White (%)','Percent White as a function of Tree Canopy (%)')

ggsave('outputs/race_scatter.png')

grid.arrange(nrow=1,s1,s2,s3)

```

# Zonal States by Income Group

```{r}

Philly_Tracts2 %>%
  st_drop_geometry() %>%
  mutate(income_group = ifelse(Average_Income > 52649,'Above City Median Income','Below City Median Income')) %>%
  drop_na() %>%
  group_by(income_group) %>% summarize(mean_tree = round(mean(pct_tree),2),
                                mean_tree_2023 = round(mean(street_tree_2023),0),
                                mean_tree_2021 = round(mean(street_tree_2021),0)) %>%
  kbl(col.names = c("Income Group","Mean % Tree Cover","Mean Number of Street Trees (2023)","Mean Number of Street Trees (2021)")) %>%
  kable_minimal()
  
```

# Work with Public Health Data from CDC

I used Cancer, Asthma, and Mental Health Data from CDC as these are the variables used in the tree plan. CDC data uses 2010 census tracts so could not join data to 2020 census tracts. 

```{r cdc_places}

places_phl <- read.socrata('https://data.cdc.gov/resource/cwsq-ngmh.csv?stateabbr=PA') %>%
  filter(countyname == 'Philadelphia') %>%
  pivot_wider(id_cols='locationname',names_from='measureid',values_from='data_value') %>%
  rename(GEOID = locationname) %>%
  mutate(GEOID = as.character(GEOID))

tracts2010 <- tracts(state='PA',county='Philadelphia',year=2019) %>% st_transform('EPSG:2272')

cdc_phl <- places_phl %>%
  select(CANCER,CASTHMA,MHLTH) %>%
  scale() %>% 
  rowMeans() %>%
  scale() %>%
  as.data.frame() %>%
  cbind(places_phl,.) %>%
  left_join(tracts2010,.,by='GEOID')
  
```

# Maps of things that went into priority area mapping (i.e: Income, CDC Data, and Heat Vulnerability)

```{r fig.width=12,fig.height=5}

m1 <- ggplot() +
  geom_sf(data = city_concil_districts,fill='grey95',linewidth=1)+
  geom_sf(data = Philly_Tracts2, aes(fill = as.character(ntile(Average_Income,5))),color='white',linewidth =0.2)+
  scale_fill_manual(values = rev(brewer.pal(n = 5, name = "Purples")),na.value="gray70",name='Annual Income',labels=c('Low','','Medium','','High','No Data'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Annual Income')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.25))

m2 <- ggplot() +
  geom_sf(data = city_concil_districts,fill='grey95',linewidth=1)+
  geom_sf(data = heat_vulnerability, aes(fill = as.character(ntile(hei_score,5))),color='white',linewidth =0.2)+
  scale_fill_manual(values = (brewer.pal(n = 5, name = "Reds")),na.value="gray70",name='Heat Vulnerability',labels=c('Low','','Medium','','High','No Data'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Heat Vulnerability')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

m3 <- ggplot() +
  geom_sf(data = city_concil_districts,fill='grey95',linewidth=1)+
  geom_sf(data = cdc_phl, aes(fill = as.character(ntile(V1,5))),color='white',linewidth =0.2)+
  scale_fill_manual(values = (brewer.pal(n = 5, name = "Oranges")),na.value="gray70",name='Public Health',labels=c('Low','','Medium','','High','No Data'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Public Health Risk')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

grid.arrange(nrow=1,m1,m2,m3)

g <- arrangeGrob(m1,m2,m3, nrow=1) #generates g
ggsave(file="outputs/drivers.png", g)
```

# Map of prioirity area

```{r priority_areas,fig.width=12, fig.height=5}

priority_areas <- st_read('TreePlan_Priority_Layers_2021/PHS_Priority_Layers_2021.shp') %>% st_transform('EPSG:2272')

ggplot() +
  geom_sf(data = city_concil_districts,fill='grey95',linewidth=1)+
  geom_sf(data = priority_areas, aes(fill = as.character(ntile(PriorityVa,5))),color='transparent',linewidth =0.2)+
  scale_fill_manual(values = (brewer.pal(n = 5, name = "OrRd")),na.value="gray70",name='Priority for Tree Planting',labels=c('Low','','Medium','','High','No Data'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Priority Areas for Tree Planting')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.2))

ggsave('outputs/priority.png',dpi=300,width=5,height=5)

```

# Summary statistics - Whole City

Count the number of street trees in whole city in 2021 and 2023 and calculate change and percent change.

```{r}

Philly_Tracts2 %>%
  st_drop_geometry() %>%
  summarise(tree_2021 = sum(street_tree_2021),
            tree_2023 = sum(street_tree_2023)) %>%
  mutate(change = tree_2023 - tree_2021,
         pct_change = (tree_2023 - tree_2021)/tree_2021 * 100) %>%
  kbl() %>%
  kable_classic()

```

# Summary statistics - Priority Areas

Count the number of street trees in priority areas in 2021 and 2023 and calculate change and percent change.

```{r}

high_priority_areas <- priority_areas %>% filter(PriorityVa > 41.84)

trees_2021 <- st_read(url_2021) %>% st_transform('EPSG:2272')
trees_2023 <- st_read(url_2023) %>% st_transform('EPSG:2272')

street_2021_high_prioirty <- trees_2021 %>%
  st_join(.,high_priority_areas,predicate='st_intersects',left=FALSE) %>%
  st_drop_geometry() %>%
  count() %>%
  rename(count_2021 = n)

street_2023_high_prioirty <- trees_2023 %>%
  st_join(.,high_priority_areas,predicate='st_intersects',left=FALSE) %>%
  st_drop_geometry() %>%
  count() %>%
  rename(count_2023 = n)

cbind(street_2021_high_prioirty,street_2023_high_prioirty) %>%
  mutate(pct_change = (count_2023 - count_2021) / count_2021 * 100) %>%
  kbl() %>%
  kable_classic()

```

# Maps of Planting and Pruning Data provided by the City

```{r fig.width=12,fig.height=5}
#Read planting data by census block and get total for FY23 and FY24
plantings <- read.csv('data/plantings.csv') %>% 
  replace(is.na(.),0) %>% 
  rename(GEOID20 = Census.Block) %>%
  mutate(Plantings_FY_2024_23 = FY23.Count + FY24.Count) %>%
  select(GEOID20,Plantings_FY_2024_23)

#Read pruning data by census block and get total for FY23 and FY24
prunings <- read.csv('data/prunings.csv') %>% 
  replace(is.na(.),0) %>% 
  rename(GEOID20 = Census.Block) %>%
  mutate(Prunings_FY_2024_23 = FY23.Count + FY24.Count) %>%
  select(GEOID20,Prunings_FY_2024_23)

#Download cenus block data using tigris and join planting and pruning data
plantings_prunings_block <- tigris::blocks(state='PA',county='Philadelphia') %>%
  left_join(.,plantings,by='GEOID20') %>%
  left_join(.,prunings,by='GEOID20') %>%
  replace(is.na(.),0) %>% 
  st_transform('EPSG:2272')

#Aggregate up to the tract level
plantings_prunings_tract <- plantings_prunings_block %>%
  st_drop_geometry() %>%
  group_by(TRACTCE20) %>% summarise(plantings = sum(Plantings_FY_2024_23),
                                    prunings = sum(Prunings_FY_2024_23)) %>%
  mutate(GEOID = paste('42101',TRACTCE20,sep="")) %>%
  select(-TRACTCE20)

#Join aggregated data to the census tracts boundaries
Philly_Tracts3 <- left_join(Philly_Tracts2,plantings_prunings_tract,by='GEOID')

#Make Maps
t7 <- ggplot() +
  geom_sf(data = Philly_Tracts3, aes(fill = cut(plantings, breaks = c(-1,0,2,4,6,8,10,30))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 7, name = "YlGn"),name='Trees Planted',labels=c('0','1-2','3-4','5-6','7-8','9-10','10+'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Number of Trees Planted (FY23 and FY24)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.25))

ggsave('outputs/plantings.png',dpi=300,width=5,height=5)

t8 <- ggplot() +
  geom_sf(data = Philly_Tracts3, aes(fill = cut(prunings, breaks = c(-1,0,5,10,15,20,25,100))),color='white',linewidth =0.2)+
  scale_fill_manual(values = brewer.pal(n = 7, name = "YlGn"),name='Trees Pruned',labels=c('0','1-5','6-10','11-15','16-20','21-25','25+'))+
  geom_sf(data = city_concil_districts,fill='Transparent',color='grey20',linewidth=1)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT != 9 & DISTRICT != 2),aes(label=DISTRICT),size=7)+
  geom_sf_text(data=city_concil_districts %>% filter(DISTRICT == 9 | DISTRICT == 2),aes(label=DISTRICT),size=7,nudge_x=5000,nudge_y=-5000)+
  theme_void()+
  ggtitle('Number of Trees Pruned (FY23 and FY24)')+
  theme(legend.text=element_text(size=11),legend.title=element_text(size=12),legend.position = c(0.8, 0.25))

ggsave('outputs/prunings.png',dpi=300,width=5,height=5)

grid.arrange(nrow=1,t7,t8)
  
```

Calculate the Number of Prunings and Plantings in Priority Areas. Check if centroid of census block is in a high priority area.

``` {r prunings_plantings_priority_area}

plantings_prunings_block %>%
  st_centroid() %>%
  st_join(.,high_priority_areas,predicate='st_intersects',left=FALSE) %>%
  summarise(plantings_24 = sum(Plantings_FY24),
            prunings_24 = sum(Prunings_FY24)) %>%
  st_drop_geometry() %>%
  mutate(plant_percent24 = plantings_24 / 570,
         prun_percent24 = prunings_24 / 1547) %>%
  kbl() %>%
  kable_classic()

```